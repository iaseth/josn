
# josn
{{ "josn-cli" | NpmLink }} is a command-line `JSON` viewer, written in `JavaScript` and `TypeScript`.

I felt the need for a JSON browser when I was working on {{ gh.link("iaseth/top-100-yc-companies") }}.
I primarily use it to verify the JSON data collected in my web scraping projects.
I have created a similar tool ({{ gh.link("iaseth/jsonplus", "jsonplus") }}) in `C++`.

I am using {{ gh.link("iaseth/readmix", "readmix") }} for generating this README.
You can view the source file [here](https://github.com/iaseth/josn/blob/master/README.md.rx).


## Table of contents
{{ tableOfContents(doc) }}


## Installation
You can install {{ "josn-cli" | NpmLink }} with the following command:
=> npm i -g josn-cli
Now you should be able to run the `josn` command in your terminal.


## Usage
* **Printing whole files**

	Provide the `filepath` as the first argument.
	* This will print the whole file as indented JSON:
		=> josn filename.json
	* When you supply a `path` that is a directory, `josn` will automatically select the `package.json` inside that directory:
		=> josn reactapp
		This is equivalent to writing:
		=> josn reactapp/package.json
	* When you supply a `path` that is a directory but it does not contain a `package.json`, `josn` will try to find a `json` file in that directory:
		=> josn mydata/

* **Printing an object**

	You can use the `keyName` to traverse inside an object.
	* This will print the `dependencies` object inside `package.json`:
		=> josn package.json dependencies
	* `josn` is case insensitive, so you might as well write this:
		=> josn package.json Dependencies
	* Or even this:
		=> josn package.json DEPENDENCIES
	* And you can skip parts of the key name if it is unique enough:
		=> josn package.json dep
		This will print the first `key` that starts with the prefix `dep`.

* **Printing an array element**

	You can use numbers to select array elements.
	* This will print the first element of the data array:
		=> josn data.json data 0
	* You can also use negative indices to select an element from the end:
		=> josn data.json data -1
		This will print last element of `data` array.


## Package details
{{ npm.packageDetails() }}


## Dependencies
{{ npm.dependencyTable() }}


## Dev dependencies
{{ npm.devDependencyTable() }}


## License
{{ "LICENSE.md" | File }}


{{ giveCredit() }}

